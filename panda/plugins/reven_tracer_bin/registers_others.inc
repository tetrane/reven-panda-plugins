REGISTER_CTX(top, 1, fpstt)
REGISTER_CTX(x87r0, 10, fpregs[0])
REGISTER_CTX(x87r1, 10, fpregs[1])
REGISTER_CTX(x87r2, 10, fpregs[2])
REGISTER_CTX(x87r3, 10, fpregs[3])
REGISTER_CTX(x87r4, 10, fpregs[4])
REGISTER_CTX(x87r5, 10, fpregs[5])
REGISTER_CTX(x87r6, 10, fpregs[6])
REGISTER_CTX(x87r7, 10, fpregs[7])

REGISTER_CTX(x87lastip, 8, fpip)
REGISTER_CTX(x87lastdp, 8, fpdp)
REGISTER_CTX(x87opcode, 2, fpop)
REGISTER_CTX(x87status, 2, fpus)
REGISTER_CTX(x87control, 2, fpuc)
REGISTER(x87tags, 2) // Special case, needs reconstruction

REGISTER_CTX(cs, 2, segs[R_CS].selector)
REGISTER_CTX(ds, 2, segs[R_DS].selector)
REGISTER_CTX(es, 2, segs[R_ES].selector)
REGISTER_CTX(ss, 2, segs[R_SS].selector)
REGISTER_CTX(fs, 2, segs[R_FS].selector)
REGISTER_CTX(gs, 2, segs[R_GS].selector)

REGISTER(cs_shadow, 8)
REGISTER(ds_shadow, 8)
REGISTER(es_shadow, 8)
REGISTER(ss_shadow, 8)
REGISTER(fs_shadow, 8)
REGISTER(gs_shadow, 8)

REGISTER_CTX(pkru, 4, pkru)

REGISTER_CTX(gdtr_base, 8, gdt.base)
REGISTER_CTX(ldtr_base, 8, ldt.base)
REGISTER_CTX(idtr_base, 8, idt.base)
REGISTER_CTX(tr_base, 8, tr.base)
REGISTER_CTX(gdtr_limit, 2, gdt.limit)
REGISTER_CTX(ldtr_limit, 3, ldt.limit)
REGISTER_CTX(idtr_limit, 2, idt.limit)
REGISTER_CTX(tr_limit, 3, tr.limit)

REGISTER_CTX(cr0, 8, cr[0])
REGISTER_CTX(cr2, 8, cr[2])
REGISTER_CTX(cr3, 8, cr[3])
REGISTER_CTX(cr4, 8, cr[4])
REGISTER(cr8, 8) // Special case, is computed

REGISTER_CTX(dr0, 8, dr[0])
REGISTER_CTX(dr1, 8, dr[1])
REGISTER_CTX(dr2, 8, dr[2])
REGISTER_CTX(dr3, 8, dr[3])
REGISTER_CTX(dr6, 8, dr[6])
REGISTER_CTX(dr7, 8, dr[7])

REGISTER_CTX(zmm0, 64, xmm_regs[0])
REGISTER_CTX(zmm1, 64, xmm_regs[1])
REGISTER_CTX(zmm2, 64, xmm_regs[2])
REGISTER_CTX(zmm3, 64, xmm_regs[3])
REGISTER_CTX(zmm4, 64, xmm_regs[4])
REGISTER_CTX(zmm5, 64, xmm_regs[5])
REGISTER_CTX(zmm6, 64, xmm_regs[6])
REGISTER_CTX(zmm7, 64, xmm_regs[7])
REGISTER_CTX(zmm8, 64, xmm_regs[8])
REGISTER_CTX(zmm9, 64, xmm_regs[9])
REGISTER_CTX(zmm10, 64, xmm_regs[10])
REGISTER_CTX(zmm11, 64, xmm_regs[11])
REGISTER_CTX(zmm12, 64, xmm_regs[12])
REGISTER_CTX(zmm13, 64, xmm_regs[13])
REGISTER_CTX(zmm14, 64, xmm_regs[14])
REGISTER_CTX(zmm15, 64, xmm_regs[15])
REGISTER_CTX(zmm16, 64, xmm_regs[16])
REGISTER_CTX(zmm17, 64, xmm_regs[17])
REGISTER_CTX(zmm18, 64, xmm_regs[18])
REGISTER_CTX(zmm19, 64, xmm_regs[19])
REGISTER_CTX(zmm20, 64, xmm_regs[20])
REGISTER_CTX(zmm21, 64, xmm_regs[21])
REGISTER_CTX(zmm22, 64, xmm_regs[22])
REGISTER_CTX(zmm23, 64, xmm_regs[23])
REGISTER_CTX(zmm24, 64, xmm_regs[24])
REGISTER_CTX(zmm25, 64, xmm_regs[25])
REGISTER_CTX(zmm26, 64, xmm_regs[26])
REGISTER_CTX(zmm27, 64, xmm_regs[27])
REGISTER_CTX(zmm28, 64, xmm_regs[28])
REGISTER_CTX(zmm29, 64, xmm_regs[29])
REGISTER_CTX(zmm30, 64, xmm_regs[30])
REGISTER_CTX(zmm31, 64, xmm_regs[31])

REGISTER_CTX(mxcsr, 4, mxcsr)

// MSRs
REGISTER_MSR(sysenter_cs, MSR_IA32_SYSENTER_CS)
REGISTER_MSR(sysenter_esp, MSR_IA32_SYSENTER_ESP)
REGISTER_MSR(sysenter_eip, MSR_IA32_SYSENTER_EIP)
REGISTER_MSR(apicbase, MSR_IA32_APICBASE)
REGISTER_MSR(efer, MSR_EFER)
REGISTER_MSR(star, MSR_STAR)
REGISTER_MSR(pat, MSR_PAT)
// MSR_VM_HSAVE_PA does not exist in the official Intel documentation
REGISTER_MSR(perf_status, MSR_IA32_PERF_STATUS)
REGISTER_MSR(lstar, MSR_LSTAR)
REGISTER_MSR(cstar, MSR_CSTAR)
REGISTER_MSR(fmask, MSR_FMASK)
REGISTER_MSR(fsbase, MSR_FSBASE)
REGISTER_MSR(gsbase, MSR_GSBASE)
REGISTER_MSR(kernelgsbase, MSR_KERNELGSBASE)
REGISTER_MSR(tsc_aux, MSR_TSC_AUX)
REGISTER_MSR(mtrrphysbase_0, MSR_MTRRphysBase(0))
REGISTER_MSR(mtrrphysbase_1, MSR_MTRRphysBase(1))
REGISTER_MSR(mtrrphysbase_2, MSR_MTRRphysBase(2))
REGISTER_MSR(mtrrphysbase_3, MSR_MTRRphysBase(3))
REGISTER_MSR(mtrrphysbase_4, MSR_MTRRphysBase(4))
REGISTER_MSR(mtrrphysbase_5, MSR_MTRRphysBase(5))
REGISTER_MSR(mtrrphysbase_6, MSR_MTRRphysBase(6))
REGISTER_MSR(mtrrphysbase_7, MSR_MTRRphysBase(7))
REGISTER_MSR(mtrrphysmask_0, MSR_MTRRphysMask(0))
REGISTER_MSR(mtrrphysmask_1, MSR_MTRRphysMask(1))
REGISTER_MSR(mtrrphysmask_2, MSR_MTRRphysMask(2))
REGISTER_MSR(mtrrphysmask_3, MSR_MTRRphysMask(3))
REGISTER_MSR(mtrrphysmask_4, MSR_MTRRphysMask(4))
REGISTER_MSR(mtrrphysmask_5, MSR_MTRRphysMask(5))
REGISTER_MSR(mtrrphysmask_6, MSR_MTRRphysMask(6))
REGISTER_MSR(mtrrphysmask_7, MSR_MTRRphysMask(7))
REGISTER_MSR(mtrrfix64k_00000, MSR_MTRRfix64K_00000)
REGISTER_MSR(mtrrfix16k_80000, MSR_MTRRfix16K_80000)
REGISTER_MSR(mtrrfix16k_a0000, MSR_MTRRfix16K_A0000)
REGISTER_MSR(mtrrfix4k_c0000, MSR_MTRRfix4K_C0000)
REGISTER_MSR(mtrrfix4k_c8000, MSR_MTRRfix4K_C8000)
REGISTER_MSR(mtrrfix4k_d0000, MSR_MTRRfix4K_D0000)
REGISTER_MSR(mtrrfix4k_d8000, MSR_MTRRfix4K_D8000)
REGISTER_MSR(mtrrfix4k_e0000, MSR_MTRRfix4K_E0000)
REGISTER_MSR(mtrrfix4k_e8000, MSR_MTRRfix4K_E8000)
REGISTER_MSR(mtrrfix4k_f0000, MSR_MTRRfix4K_F0000)
REGISTER_MSR(mtrrfix4k_f8000, MSR_MTRRfix4K_F8000)
REGISTER_MSR(mtrrdeftype, MSR_MTRRdefType)
REGISTER_MSR(mtrrcap, MSR_MTRRcap)
REGISTER_MSR(mcg_cap, MSR_MCG_CAP)
REGISTER_MSR(mcg_ctl, MSR_MCG_CTL)
REGISTER_MSR(mcg_status, MSR_MCG_STATUS)
REGISTER_MSR(misc_enable, MSR_IA32_MISC_ENABLE)
REGISTER_MSR(bndcfgs, MSR_IA32_BNDCFGS)
REGISTER_MSR(mc0_ctl, MSR_MC0_CTL + 4 * 0)
REGISTER_MSR(mc0_status, MSR_MC0_STATUS + 4 * 0)
REGISTER_MSR(mc0_addr, MSR_MC0_ADDR + 4 * 0)
REGISTER_MSR(mc0_misc, MSR_MC0_MISC + 4 * 0)
REGISTER_MSR(mc1_ctl, MSR_MC0_CTL + 4 * 1)
REGISTER_MSR(mc1_status, MSR_MC0_STATUS + 4 * 1)
REGISTER_MSR(mc1_addr, MSR_MC0_ADDR + 4 * 1)
REGISTER_MSR(mc1_misc, MSR_MC0_MISC + 4 * 1)
REGISTER_MSR(mc2_ctl, MSR_MC0_CTL + 4 * 2)
REGISTER_MSR(mc2_status, MSR_MC0_STATUS + 4 * 2)
REGISTER_MSR(mc2_addr, MSR_MC0_ADDR + 4 * 2)
REGISTER_MSR(mc2_misc, MSR_MC0_MISC + 4 * 2)
REGISTER_MSR(mc3_ctl, MSR_MC0_CTL + 4 * 3)
REGISTER_MSR(mc3_status, MSR_MC0_STATUS + 4 * 3)
REGISTER_MSR(mc3_addr, MSR_MC0_ADDR + 4 * 3)
REGISTER_MSR(mc3_misc, MSR_MC0_MISC + 4 * 3)
REGISTER_MSR(mc4_ctl, MSR_MC0_CTL + 4 * 4)
REGISTER_MSR(mc4_status, MSR_MC0_STATUS + 4 * 4)
REGISTER_MSR(mc4_addr, MSR_MC0_ADDR + 4 * 4)
REGISTER_MSR(mc4_misc, MSR_MC0_MISC + 4 * 4)
REGISTER_MSR(mc5_ctl, MSR_MC0_CTL + 4 * 5)
REGISTER_MSR(mc5_status, MSR_MC0_STATUS + 4 * 5)
REGISTER_MSR(mc5_addr, MSR_MC0_ADDR + 4 * 5)
REGISTER_MSR(mc5_misc, MSR_MC0_MISC + 4 * 5)
REGISTER_MSR(mc6_ctl, MSR_MC0_CTL + 4 * 6)
REGISTER_MSR(mc6_status, MSR_MC0_STATUS + 4 * 6)
REGISTER_MSR(mc6_addr, MSR_MC0_ADDR + 4 * 6)
REGISTER_MSR(mc6_misc, MSR_MC0_MISC + 4 * 6)
REGISTER_MSR(mc7_ctl, MSR_MC0_CTL + 4 * 7)
REGISTER_MSR(mc7_status, MSR_MC0_STATUS + 4 * 7)
REGISTER_MSR(mc7_addr, MSR_MC0_ADDR + 4 * 7)
REGISTER_MSR(mc7_misc, MSR_MC0_MISC + 4 * 7)
REGISTER_MSR(mc8_ctl, MSR_MC0_CTL + 4 * 8)
REGISTER_MSR(mc8_status, MSR_MC0_STATUS + 4 * 8)
REGISTER_MSR(mc8_addr, MSR_MC0_ADDR + 4 * 8)
REGISTER_MSR(mc8_misc, MSR_MC0_MISC + 4 * 8)
REGISTER_MSR(mc9_ctl, MSR_MC0_CTL + 4 * 9)
REGISTER_MSR(mc9_status, MSR_MC0_STATUS + 4 * 9)
REGISTER_MSR(mc9_addr, MSR_MC0_ADDR + 4 * 9)
REGISTER_MSR(mc9_misc, MSR_MC0_MISC + 4 * 9) // MCE_BANKS_DEF is 10 at time of writing so we stop here
